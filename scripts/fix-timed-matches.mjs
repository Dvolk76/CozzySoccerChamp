#!/usr/bin/env node

import { PrismaClient } from '@prisma/client';

async function fixTimedMatches() {
  const prisma = new PrismaClient();
  
  try {
    console.log('üîç –ü–æ–∏—Å–∫ –º–∞—Ç—á–µ–π —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º TIMED...');
    
    const now = new Date();
    const twoHoursAgo = new Date(now.getTime() - 2 * 60 * 60 * 1000);
    
    // –ù–∞—Ö–æ–¥–∏–º –º–∞—Ç—á–∏ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º TIMED, –∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–∏ –±–æ–ª–µ–µ 2 —á–∞—Å–æ–≤ –Ω–∞–∑–∞–¥
    const timedMatches = await prisma.match.findMany({
      where: {
        status: 'TIMED',
        kickoffAt: {
          lt: twoHoursAgo
        }
      },
      select: {
        id: true,
        homeTeam: true,
        awayTeam: true,
        kickoffAt: true,
        status: true,
        scoreHome: true,
        scoreAway: true
      }
    });
    
    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ ${timedMatches.length} –º–∞—Ç—á–µ–π —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º TIMED —Å—Ç–∞—Ä—à–µ 2 —á–∞—Å–æ–≤`);
    
    if (timedMatches.length === 0) {
      console.log('‚úÖ –í—Å–µ –º–∞—Ç—á–∏ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º TIMED –∞–∫—Ç—É–∞–ª—å–Ω—ã');
      return;
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –º–∞—Ç—á–∞—Ö
    timedMatches.forEach(match => {
      const kickoffTime = new Date(match.kickoffAt);
      const hoursAgo = Math.floor((now.getTime() - kickoffTime.getTime()) / (1000 * 60 * 60));
      console.log(`  - ${match.homeTeam} vs ${match.awayTeam} (${kickoffTime.toLocaleDateString('ru-RU')} ${kickoffTime.toLocaleTimeString('ru-RU')}) - ${hoursAgo}—á –Ω–∞–∑–∞–¥, —Å—á–µ—Ç: ${match.scoreHome || '?'}:${match.scoreAway || '?'}`);
    });
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å—ã –Ω–∞ FINISHED
    console.log('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–æ–≤ —Å TIMED –Ω–∞ FINISHED...');
    
    const updateResult = await prisma.match.updateMany({
      where: {
        status: 'TIMED',
        kickoffAt: {
          lt: twoHoursAgo
        }
      },
      data: {
        status: 'FINISHED'
      }
    });
    
    console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ ${updateResult.count} –º–∞—Ç—á–µ–π`);
    console.log('üéâ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–æ–≤ TIMED –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–æ–≤ TIMED:', error);
    process.exit(1);
  } finally {
    await prisma.$disconnect();
  }
}

fixTimedMatches();
