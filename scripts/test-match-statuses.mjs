#!/usr/bin/env node

import { getMatchStatus, canBetOnMatch, isMatchActive, isMatchFinished } from '../client/src/utils/matchStatus.js';

/**
 * –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π –ª–æ–≥–∏–∫–∏ —Å—Ç–∞—Ç—É—Å–æ–≤ –º–∞—Ç—á–µ–π
 */

console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏–∫–∏ —Å—Ç–∞—Ç—É—Å–æ–≤ –º–∞—Ç—á–µ–π...\n');

// –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
const testMatches = [
  {
    status: 'SCHEDULED',
    kickoffAt: new Date(Date.now() + 24 * 60 * 60 * 1000), // –∑–∞–≤—Ç—Ä–∞
    scoreHome: null,
    scoreAway: null
  },
  {
    status: 'TIMED',
    kickoffAt: new Date(Date.now() - 30 * 60 * 1000), // 30 –º–∏–Ω—É—Ç –Ω–∞–∑–∞–¥
    scoreHome: 1,
    scoreAway: 0
  },
  {
    status: 'IN_PLAY',
    kickoffAt: new Date(Date.now() - 60 * 60 * 1000), // 1 —á–∞—Å –Ω–∞–∑–∞–¥
    scoreHome: 2,
    scoreAway: 1
  },
  {
    status: 'PAUSED',
    kickoffAt: new Date(Date.now() - 90 * 60 * 1000), // 1.5 —á–∞—Å–∞ –Ω–∞–∑–∞–¥
    scoreHome: 1,
    scoreAway: 1
  },
  {
    status: 'FINISHED',
    kickoffAt: new Date(Date.now() - 3 * 60 * 60 * 1000), // 3 —á–∞—Å–∞ –Ω–∞–∑–∞–¥
    scoreHome: 3,
    scoreAway: 2
  },
  {
    status: 'TIMED',
    kickoffAt: new Date(Date.now() - 5 * 60 * 60 * 1000), // 5 —á–∞—Å–æ–≤ –Ω–∞–∑–∞–¥ (—Å—Ç–∞—Ä—ã–π)
    scoreHome: null,
    scoreAway: null
  },
  {
    status: 'POSTPONED',
    kickoffAt: new Date(Date.now() + 2 * 60 * 60 * 1000), // —á–µ—Ä–µ–∑ 2 —á–∞—Å–∞
    scoreHome: null,
    scoreAway: null
  },
  {
    status: 'CANCELLED',
    kickoffAt: new Date(Date.now() + 3 * 60 * 60 * 1000), // —á–µ—Ä–µ–∑ 3 —á–∞—Å–∞
    scoreHome: null,
    scoreAway: null
  },
  {
    status: 'AWARDED',
    kickoffAt: new Date(Date.now() - 2 * 60 * 60 * 1000), // 2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥
    scoreHome: 3,
    scoreAway: 0
  },
  {
    status: 'NO_PLAY',
    kickoffAt: new Date(Date.now() - 4 * 60 * 60 * 1000), // 4 —á–∞—Å–∞ –Ω–∞–∑–∞–¥
    scoreHome: null,
    scoreAway: null
  }
];

testMatches.forEach((match, index) => {
  console.log(`üìã –¢–µ—Å—Ç ${index + 1}: ${match.status}`);
  console.log(`   –í—Ä–µ–º—è: ${match.kickoffAt.toLocaleString('ru-RU')}`);
  console.log(`   –°—á–µ—Ç: ${match.scoreHome || '?'}:${match.scoreAway || '?'}`);
  
  const status = getMatchStatus(match);
  const canBet = canBetOnMatch(match);
  const isActive = isMatchActive(match);
  const isFinished = isMatchFinished(match);
  
  console.log(`   –°—Ç–∞—Ç—É—Å: ${status.text} (${status.class})`);
  console.log(`   –ú–æ–∂–Ω–æ —Å—Ç–∞–≤–∏—Ç—å: ${canBet ? '‚úÖ' : '‚ùå'}`);
  console.log(`   –ê–∫—Ç–∏–≤–µ–Ω: ${isActive ? '‚úÖ' : '‚ùå'}`);
  console.log(`   –ó–∞–≤–µ—Ä—à–µ–Ω: ${isFinished ? '‚úÖ' : '‚ùå'}`);
  console.log('');
});

console.log('üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
